#!/usr/bin/env python
import os
import sys
import argparse
from datetime import datetime
import collections

submit_template = """ #
executable = {executable}
universe = vanilla
log = {submit_dir}/condor.log
getenv = True

arguments = {arguments}

should_transfer_files = YES
transfer_input_files = {transfer_input_files}

when_to_transfer_output = ON_EXIT
output = {submit_dir}/job_$(Process).log
error = {submit_dir}/job_$(Process).err
queue
"""

def stringize(value):
    if isinstance(value, collections.Iterable):
        string = "".join([str(each) + ", " for each in value])
        string = string.strip(", ")
    else:
        string = str(value)
    return string


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("--arguments", "-a", nargs="+", required=True)
    parser.add_argument("--proj_dir", default=os.path.abspath(os.path.curdir), type=str)
    args = parser.parse_args()

    ##########################################
    # variables
    ###########################################
    executable = os.path.join(args.proj_dir, "run.sh")

    transfer_input_files = ["run.sh", "split_and_shuffle"]
    transfer_input_files = [os.path.join(args.proj_dir, each) for each in transfer_input_files]

    ###################################
    # Make a job submission directory.
    ##################################
    submit_dir_name = "job_{name}_{date}".format(
        name="SS",
        date=datetime.now().strftime("%y-%m-%d-%H-%M-%S"))

    submit_dir = os.path.join(args.proj_dir, submit_dir_name)

    if os.path.exists(submit_dir):
        raise IOError("{} already exsits".format(submit_dir))
    else:
        os.mkdir(submit_dir)

    ###################################
    # Write a jds file.
    ###################################
    arguments = stringize(args.arguments)
    transfer_input_files = stringize(transfer_input_files)

    submit = submit_template.format(
        executable=executable,
        arguments=arguments,
        transfer_input_files=transfer_input_files,
        submit_dir=submit_dir)

    jds_path = os.path.join(submit_dir, "run.jds")
    with open(jds_path, 'w') as jds_file:
        jds_file.write(submit)

    ######################################3
    # Execute condor_submit
    ####################################
    submit_cmd = "condor_submit {}".format(jds_path)
    print(submit_cmd)
    os.system(submit_cmd)


if __name__ == "__main__":
    main()
